% Script generated by Brainstorm (29-Sep-2017)
%% THE AIM of this script is import second event after having back-imported the bad trials from trial
% rejection made on first (see other script Exp2Numerosity_import_bad_trials_sj007.m
% this is done to import later the epochs time-locked to the second
% stimulus. I'm not performing a complete stript as this is just an
% adjustment for a single subject (the trial rejection was not performed in the analysis,
% probably forgotten (and I notice it).



% Input files
sFiles = {...
    'sj0007/@rawsj0007_scale_bandpass/data_0raw_sj0007_scale_bandpass.mat'};

SubjectNames = {...
    'sj0007'};


EventNames = {'s_un_inc', 's_un_con', 's_qualche_inc', 's_qualche_con', 's_alcuni_inc', 's_alcuni_con', ...
    'm_un_sg', 'm_un_pl', 'm_alcuni_sg', 'm_alcuni_pl', 'm_qualche_sg', 'm_qualche_pl'};



for iEvent = 1:length(EventNames)
    % Start a new report
    bst_report('Start', sFiles);
    
    % Process: Import MEG/EEG: Events
    Res = bst_process('CallProcess', 'process_import_data_event', sFiles, [], ...
        'subjectname', SubjectNames{1}, ...
        'condition',   '', ...
        'eventname',   EventNames{iEvent}, ...
        'timewindow',  [], ...
        'epochtime',   [-0.5, 1.5], ...
        'createcond',  0, ...
        'ignoreshort', 1, ...
        'usectfcomp',  1, ...
        'usessp',      1, ...
        'freq',        [], ...
        'baseline',    [-0.3, 0]);
    
    
    Res = bst_process('CallProcess', 'process_add_tag', Res, [], ...
        'tag',    '_second', ...
        'output', 1);  % Add to comment
    
    Res = bst_process('CallProcess', 'process_add_tag', Res, [], ...
        'tag',    '_second', ...
        'output', 2);  % Add to name
    
    % Process: Average: By trial group (folder average)
    Res = bst_process('CallProcess', 'process_average', Res, [], ...
        'avgtype',    5, ...  % By trial group (folder average)
        'avg_func',   1, ...  % Arithmetic average:  mean(x)
        'weighted',   0, ...
        'keepevents', 0);
    
    % Process: Low-pass:40Hz
    Res = bst_process('CallProcess', 'process_bandpass', Res, [], ...
        'sensortypes', 'EEG', ...
        'highpass',    0, ...
        'lowpass',     40, ...
        'attenuation', 'strict', ...  % 60dB
        'mirror',      0, ...
        'useold',      0, ...
        'overwrite',   1);
    
    Res = bst_process('CallProcess', 'process_bandpass', Res, [], ...
        'sensortypes', 'EEG', ...
        'highpass',    0, ...
        'lowpass',     40, ...
        'attenuation', 'strict', ...  % 60dB
        'mirror',      0, ...
        'useold',      0, ...
        'overwrite',   1);
    
    % Process: export to erpR
    Res = bst_process('CallProcess', 'process_export_erpR', Res, [], ...
        'base',       EventNames{iEvent}, ...
        'chars',      70, ...
        'BadChans',   1);
    
    % Save and display report
    ReportFile = bst_report('Save', Res);
    bst_report('Open', ReportFile);
    % bst_report('Export', ReportFile, ExportDir);
    
end;

